K
iter <- params$R
iter
#library(flowCore)
library(SingleCellExperiment)
library(ggplot2)
library(rstan)
#library(scater)
library(plyr)
library(reshape2)
library(readr)
#library(CATALYST)
library(magrittr)
#library(scMerge)
library(MultiAssayExperiment)
library(dplyr)
library(DESeq2)
library(abind)
library(tibble)
library(RColorBrewer)
# load("../Data/masstagSCE.rda")
# cd45.sce # 38 * 426872
# rm(epith.sce, livecells.sce, myeloid.sce, tcell.sce)
# unique(colData(cd45.sce)$patient_id.y[which(is.na(colData(cd45.sce)$Gender))])
# cd45_to_keep <- which(!is.na(colData(cd45.sce)$Gender))
# cd45.sce_dropna <- cd45.sce[,cd45_to_keep]
# cd45.sce_dropna # 38 * 420685
# # To verify there are no (true) NA's left:
# sum(is.na(rowData(cd45.sce_dropna)))
# rm(cd45.sce, cd45_to_keep)
#saveRDS(cd45.sce_dropna, "../Data/cd45_sce_dropna.rds")
cd45_sce_dropna <- readRDS("../Data/cd45_sce_dropna.rds")
load('../Data/mibiSCE.rda')
mibi.sce
rownames(mibi.sce)
proteins <- rowData(mibi.sce)$is_protein==1
sum(proteins)
mibi.sce_proteins <- mibi.sce[which(proteins),]
mibi.sce_proteins
rownames(mibi.sce_proteins)
rm(mibi.sce)
round(table(mibi.sce_proteins$tumor_group)/ncol(mibi.sce_proteins),2)
# Immune Cells
round(table(mibi.sce_proteins$immune_group)/ncol(mibi.sce_proteins),2)
immune_inds <- which(mibi.sce_proteins$tumor_group == "Immune")
mibi.sce_immune <- mibi.sce_proteins[,immune_inds]
mibi.sce_immune
mibi_sce_immune <- mibi.sce_immune
rm(mibi.sce_proteins, mibi.sce_immune)
Proteins_in_cd45 <- !(rowData(cd45_sce_dropna)$hgnc_symbol == "na")
cd45_sce_dropna <- cd45_sce_dropna[which(Proteins_in_cd45),]
cd45_sce_dropna
sum(rownames(cd45_sce_dropna) %in% rownames(mibi_sce_immune))
rownames(cd45_sce_dropna)[which(rownames(cd45_sce_dropna) %in% rownames(mibi_sce_immune))]
# 148 patients
se_cd45 <- SummarizedExperiment(
assays = list(exprs = assay(cd45_sce_dropna)),
colData = colData(cd45_sce_dropna),
rowData = rowData(cd45_sce_dropna)
)
# Subset CD45 cells from the live cells from TN patients
se_cd45 <- se_cd45[, colData(se_cd45)$Clinical.Subtype == "TN"]
se_cd45 <- se_cd45[, colSums(assay(se_cd45)) > 0]
se_mibi <- SummarizedExperiment(
assays = list(exprs = assay(mibi_sce_immune)),
colData = colData(mibi_sce_immune),
rowData = rowData(mibi_sce_immune)
)
se_mibi <- se_mibi[, colSums(assay(se_mibi)) > 0]
names(colData(se_cd45))[1:3] <- c("SampleID", "Condition", "PatientID")
names(colData(se_mibi))[c(1,9)] <- c("SampleID", "PatientID")
colData(se_cd45)$SampleID <- paste0(seq(1: length(colData(se_cd45)$SampleID)), "_", colData(se_cd45)$PatientID)
colData(se_mibi)$SampleID <- paste0(seq(1: length(colData(se_mibi)$SampleID)), "_", colData(se_mibi)$PatientID)
rownames(colData(se_cd45)) <- colData(se_cd45)$SampleID
rownames(colData(se_mibi)) <- colData(se_mibi)$SampleID
# se_cd45 <- se_cd45[, colData(se_cd45)$PatientID == "BB028"]
# colData(se_mibi)$PatientID <- factor(colData(se_mibi)$PatientID)
# se_mibi <- se_mibi[, colData(se_mibi)$PatientID == "30847"]
se_cd45 <- se_cd45[, sample(1:dim(se_cd45)[2], 50)]
se_mibi <- se_mibi[, sample(1:dim(se_mibi)[2], 50)]
cd45_mibi <- list("cd45" = se_cd45, "mibi" = se_mibi)
cd45_map <- data.frame(primary = as.character(colData(se_cd45)$SampleID),
colname = as.character(colData(se_cd45)$SampleID),
stringsAsFactors = FALSE)
mibi_map <- data.frame(primary = as.character(colData(se_mibi)$SampleID),
colname = as.character(colData(se_mibi)$SampleID),
stringsAsFactors = FALSE)
listmap <- list(cd45_map, mibi_map)
names(listmap) <- names(cd45_mibi)
dfmap <- listToMap(listmap = listmap)
sam_se_cd45 <- colData(se_cd45) %>% data.frame() %>% as.tibble()
sam_se_mibi <- colData(se_mibi) %>% data.frame() %>% as.tibble()
map_df <- full_join(sam_se_cd45, sam_se_mibi, by = "SampleID")
map_df %<>% as.data.frame
rownames(map_df) <- map_df$SampleID
mae <- MultiAssayExperiment(experiments = cd45_mibi,
colData = map_df,
sampleMap = dfmap)
trans_func <- function(x){
asinh(x/5)
}
inv_func <- function(x) {
5*sinh(x)
}
inv_func2 <- function(x) {
sinh(x)
}
# what normalization for cd45_sce_dropna expression
# asinh transformation with cofactor 5
assay(mae[["cd45"]]) <- inv_func(assay(mae[["cd45"]]))
# what normalization mibi_sce_immune
# cell size normalized, archsinh, standardized across the markers
# we couldn't guess the protein marker mean and standard deviation. We will
rw_mins <- rowMins(assay(mae[["mibi"]]))*(-1)
assay(mae[["mibi"]]) <-  assay(mae[["mibi"]]) + rw_mins
assay(mae[["mibi"]]) <- inv_func2(assay(mae[["mibi"]]))
names(rowData(mae[["mibi"]]))[1] <- "marker_name"
u <- max(assay(mae[["cd45"]]))
u
x_mibi <- assay(mae[["mibi"]])
y_mibi <- apply(x_mibi, 1, function(x){
xmin <- min(x)
xrange <- max(x) - min(x)
y <- (x-xmin)/xrange*u
return(y)
})
dim(x_mibi)
dim(y_mibi)
y_mibi <- t(y_mibi)
assay(mae[["mibi"]]) <- y_mibi
x1 <- assay(mae[["cd45"]]) %>% t() %>% as.tibble()
x2 <- assay(mae[["mibi"]]) %>% t() %>% as.tibble()
max(x1)
max(x2)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 10,
fig.height = 10)
K <- params$K
K
iter <- params$R
iter
#library(flowCore)
library(SingleCellExperiment)
library(ggplot2)
library(rstan)
#library(scater)
library(plyr)
library(reshape2)
library(readr)
#library(CATALYST)
library(magrittr)
#library(scMerge)
library(MultiAssayExperiment)
library(dplyr)
library(DESeq2)
library(abind)
library(tibble)
library(RColorBrewer)
# load("../Data/masstagSCE.rda")
# cd45.sce # 38 * 426872
# rm(epith.sce, livecells.sce, myeloid.sce, tcell.sce)
# unique(colData(cd45.sce)$patient_id.y[which(is.na(colData(cd45.sce)$Gender))])
# cd45_to_keep <- which(!is.na(colData(cd45.sce)$Gender))
# cd45.sce_dropna <- cd45.sce[,cd45_to_keep]
# cd45.sce_dropna # 38 * 420685
# # To verify there are no (true) NA's left:
# sum(is.na(rowData(cd45.sce_dropna)))
# rm(cd45.sce, cd45_to_keep)
#saveRDS(cd45.sce_dropna, "../Data/cd45_sce_dropna.rds")
cd45_sce_dropna <- readRDS("../Data/cd45_sce_dropna.rds")
load('../Data/mibiSCE.rda')
mibi.sce
rownames(mibi.sce)
proteins <- rowData(mibi.sce)$is_protein==1
sum(proteins)
mibi.sce_proteins <- mibi.sce[which(proteins),]
mibi.sce_proteins
rownames(mibi.sce_proteins)
rm(mibi.sce)
round(table(mibi.sce_proteins$tumor_group)/ncol(mibi.sce_proteins),2)
# Immune Cells
round(table(mibi.sce_proteins$immune_group)/ncol(mibi.sce_proteins),2)
immune_inds <- which(mibi.sce_proteins$tumor_group == "Immune")
mibi.sce_immune <- mibi.sce_proteins[,immune_inds]
mibi.sce_immune
mibi_sce_immune <- mibi.sce_immune
rm(mibi.sce_proteins, mibi.sce_immune)
Proteins_in_cd45 <- !(rowData(cd45_sce_dropna)$hgnc_symbol == "na")
cd45_sce_dropna <- cd45_sce_dropna[which(Proteins_in_cd45),]
cd45_sce_dropna
sum(rownames(cd45_sce_dropna) %in% rownames(mibi_sce_immune))
rownames(cd45_sce_dropna)[which(rownames(cd45_sce_dropna) %in% rownames(mibi_sce_immune))]
# 148 patients
se_cd45 <- SummarizedExperiment(
assays = list(exprs = assay(cd45_sce_dropna)),
colData = colData(cd45_sce_dropna),
rowData = rowData(cd45_sce_dropna)
)
# Subset CD45 cells from the live cells from TN patients
se_cd45 <- se_cd45[, colData(se_cd45)$Clinical.Subtype == "TN"]
se_cd45 <- se_cd45[, colSums(assay(se_cd45)) > 0]
se_mibi <- SummarizedExperiment(
assays = list(exprs = assay(mibi_sce_immune)),
colData = colData(mibi_sce_immune),
rowData = rowData(mibi_sce_immune)
)
se_mibi <- se_mibi[, colSums(assay(se_mibi)) > 0]
names(colData(se_cd45))[1:3] <- c("SampleID", "Condition", "PatientID")
names(colData(se_mibi))[c(1,9)] <- c("SampleID", "PatientID")
colData(se_cd45)$SampleID <- paste0(seq(1: length(colData(se_cd45)$SampleID)), "_", colData(se_cd45)$PatientID)
colData(se_mibi)$SampleID <- paste0(seq(1: length(colData(se_mibi)$SampleID)), "_", colData(se_mibi)$PatientID)
rownames(colData(se_cd45)) <- colData(se_cd45)$SampleID
rownames(colData(se_mibi)) <- colData(se_mibi)$SampleID
# se_cd45 <- se_cd45[, colData(se_cd45)$PatientID == "BB028"]
# colData(se_mibi)$PatientID <- factor(colData(se_mibi)$PatientID)
# se_mibi <- se_mibi[, colData(se_mibi)$PatientID == "30847"]
se_cd45 <- se_cd45[, sample(1:dim(se_cd45)[2], 50)]
se_mibi <- se_mibi[, sample(1:dim(se_mibi)[2], 50)]
cd45_mibi <- list("cd45" = se_cd45, "mibi" = se_mibi)
cd45_map <- data.frame(primary = as.character(colData(se_cd45)$SampleID),
colname = as.character(colData(se_cd45)$SampleID),
stringsAsFactors = FALSE)
mibi_map <- data.frame(primary = as.character(colData(se_mibi)$SampleID),
colname = as.character(colData(se_mibi)$SampleID),
stringsAsFactors = FALSE)
listmap <- list(cd45_map, mibi_map)
names(listmap) <- names(cd45_mibi)
dfmap <- listToMap(listmap = listmap)
sam_se_cd45 <- colData(se_cd45) %>% data.frame() %>% as.tibble()
sam_se_mibi <- colData(se_mibi) %>% data.frame() %>% as.tibble()
map_df <- full_join(sam_se_cd45, sam_se_mibi, by = "SampleID")
map_df %<>% as.data.frame
rownames(map_df) <- map_df$SampleID
mae <- MultiAssayExperiment(experiments = cd45_mibi,
colData = map_df,
sampleMap = dfmap)
trans_func <- function(x){
asinh(x/5)
}
inv_func <- function(x) {
5*sinh(x)
}
inv_func2 <- function(x) {
sinh(x)
}
# what normalization for cd45_sce_dropna expression
# asinh transformation with cofactor 5
assay(mae[["cd45"]]) <- inv_func(assay(mae[["cd45"]]))
# what normalization mibi_sce_immune
# cell size normalized, archsinh, standardized across the markers
# we couldn't guess the protein marker mean and standard deviation. We will
rw_mins <- rowMins(assay(mae[["mibi"]]))*(-1)
assay(mae[["mibi"]]) <-  assay(mae[["mibi"]]) + rw_mins
assay(mae[["mibi"]]) <- inv_func2(assay(mae[["mibi"]]))
names(rowData(mae[["mibi"]]))[1] <- "marker_name"
u <- max(assay(mae[["cd45"]]))
x_mibi <- assay(mae[["mibi"]])
sum(is.na(x_mibi))
y_mibi <- apply(x_mibi, 1, function(x){
xmin <- min(x)
xrange <- max(x) - min(x)
y <- (x-xmin)/xrange*u
return(y)
})
sum(is.na(y_mibi))
View(y_mibi)
x_mibi["B7H3",]
length(mae)
i
i=1
any_all_zeros <- apply(assay(mae, i), 1, function(x){sum(x>0) > 0})
any_all_zeros
not_all_zeros <- apply(assay(mae, i), 1, function(x){sum(x > 0) > 0})
names_not_all_zeros <- names(not_all_zeros)[which(not_all_zeros)]
names_not_all_zeros
names(mae)[i]
rownames(mae)[[names(mae)[i]]]
rownames(mae)[[names(mae)[i]]] <- names_not_all_zeros
names_not_all_zeros
rownames(mae)[[names(mae)[i]]]
row_names <- rownames(mae)
row_names
row_names[[names(mae)[i]]]
row_names[[names(mae)[i]]] <- names_not_all_zeros
mae = mae[row_names, , ]
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
fig.width = 10,
fig.height = 10)
K <- params$K
K
iter <- params$R
iter
#library(flowCore)
library(SingleCellExperiment)
library(ggplot2)
library(rstan)
#library(scater)
library(plyr)
library(reshape2)
library(readr)
#library(CATALYST)
library(magrittr)
#library(scMerge)
library(MultiAssayExperiment)
library(dplyr)
library(DESeq2)
library(abind)
library(tibble)
library(RColorBrewer)
# load("../Data/masstagSCE.rda")
# cd45.sce # 38 * 426872
# rm(epith.sce, livecells.sce, myeloid.sce, tcell.sce)
# unique(colData(cd45.sce)$patient_id.y[which(is.na(colData(cd45.sce)$Gender))])
# cd45_to_keep <- which(!is.na(colData(cd45.sce)$Gender))
# cd45.sce_dropna <- cd45.sce[,cd45_to_keep]
# cd45.sce_dropna # 38 * 420685
# # To verify there are no (true) NA's left:
# sum(is.na(rowData(cd45.sce_dropna)))
# rm(cd45.sce, cd45_to_keep)
#saveRDS(cd45.sce_dropna, "../Data/cd45_sce_dropna.rds")
cd45_sce_dropna <- readRDS("../Data/cd45_sce_dropna.rds")
load('../Data/mibiSCE.rda')
mibi.sce
rownames(mibi.sce)
proteins <- rowData(mibi.sce)$is_protein==1
sum(proteins)
mibi.sce_proteins <- mibi.sce[which(proteins),]
mibi.sce_proteins
rownames(mibi.sce_proteins)
rm(mibi.sce)
round(table(mibi.sce_proteins$tumor_group)/ncol(mibi.sce_proteins),2)
# Immune Cells
round(table(mibi.sce_proteins$immune_group)/ncol(mibi.sce_proteins),2)
immune_inds <- which(mibi.sce_proteins$tumor_group == "Immune")
mibi.sce_immune <- mibi.sce_proteins[,immune_inds]
mibi.sce_immune
mibi_sce_immune <- mibi.sce_immune
rm(mibi.sce_proteins, mibi.sce_immune)
Proteins_in_cd45 <- !(rowData(cd45_sce_dropna)$hgnc_symbol == "na")
cd45_sce_dropna <- cd45_sce_dropna[which(Proteins_in_cd45),]
cd45_sce_dropna
sum(rownames(cd45_sce_dropna) %in% rownames(mibi_sce_immune))
rownames(cd45_sce_dropna)[which(rownames(cd45_sce_dropna) %in% rownames(mibi_sce_immune))]
# 148 patients
se_cd45 <- SummarizedExperiment(
assays = list(exprs = assay(cd45_sce_dropna)),
colData = colData(cd45_sce_dropna),
rowData = rowData(cd45_sce_dropna)
)
# Subset CD45 cells from the live cells from TN patients
se_cd45 <- se_cd45[, colData(se_cd45)$Clinical.Subtype == "TN"]
se_cd45 <- se_cd45[, colSums(assay(se_cd45)) > 0]
se_mibi <- SummarizedExperiment(
assays = list(exprs = assay(mibi_sce_immune)),
colData = colData(mibi_sce_immune),
rowData = rowData(mibi_sce_immune)
)
se_mibi <- se_mibi[, colSums(assay(se_mibi)) > 0]
names(colData(se_cd45))[1:3] <- c("SampleID", "Condition", "PatientID")
names(colData(se_mibi))[c(1,9)] <- c("SampleID", "PatientID")
colData(se_cd45)$SampleID <- paste0(seq(1: length(colData(se_cd45)$SampleID)), "_", colData(se_cd45)$PatientID)
colData(se_mibi)$SampleID <- paste0(seq(1: length(colData(se_mibi)$SampleID)), "_", colData(se_mibi)$PatientID)
rownames(colData(se_cd45)) <- colData(se_cd45)$SampleID
rownames(colData(se_mibi)) <- colData(se_mibi)$SampleID
# se_cd45 <- se_cd45[, colData(se_cd45)$PatientID == "BB028"]
# colData(se_mibi)$PatientID <- factor(colData(se_mibi)$PatientID)
# se_mibi <- se_mibi[, colData(se_mibi)$PatientID == "30847"]
se_cd45 <- se_cd45[, sample(1:dim(se_cd45)[2], 50)]
se_mibi <- se_mibi[, sample(1:dim(se_mibi)[2], 50)]
cd45_mibi <- list("cd45" = se_cd45, "mibi" = se_mibi)
cd45_map <- data.frame(primary = as.character(colData(se_cd45)$SampleID),
colname = as.character(colData(se_cd45)$SampleID),
stringsAsFactors = FALSE)
mibi_map <- data.frame(primary = as.character(colData(se_mibi)$SampleID),
colname = as.character(colData(se_mibi)$SampleID),
stringsAsFactors = FALSE)
listmap <- list(cd45_map, mibi_map)
names(listmap) <- names(cd45_mibi)
dfmap <- listToMap(listmap = listmap)
sam_se_cd45 <- colData(se_cd45) %>% data.frame() %>% as.tibble()
sam_se_mibi <- colData(se_mibi) %>% data.frame() %>% as.tibble()
map_df <- full_join(sam_se_cd45, sam_se_mibi, by = "SampleID")
map_df %<>% as.data.frame
rownames(map_df) <- map_df$SampleID
mae <- MultiAssayExperiment(experiments = cd45_mibi,
colData = map_df,
sampleMap = dfmap)
trans_func <- function(x){
asinh(x/5)
}
inv_func <- function(x) {
5*sinh(x)
}
inv_func2 <- function(x) {
sinh(x)
}
# what normalization for cd45_sce_dropna expression
# asinh transformation with cofactor 5
assay(mae[["cd45"]]) <- inv_func(assay(mae[["cd45"]]))
# what normalization mibi_sce_immune
# cell size normalized, archsinh, standardized across the markers
# we couldn't guess the protein marker mean and standard deviation. We will
rw_mins <- rowMins(assay(mae[["mibi"]]))*(-1)
assay(mae[["mibi"]]) <-  assay(mae[["mibi"]]) + rw_mins
assay(mae[["mibi"]]) <- inv_func2(assay(mae[["mibi"]]))
names(rowData(mae[["mibi"]]))[1] <- "marker_name"
for(i in 1:length(mae)){
not_all_zeros <- apply(assay(mae, i), 1, function(x){sum(x > 0) > 1})
names_not_all_zeros <- names(not_all_zeros)[which(not_all_zeros)]
row_names <- rownames(mae)
row_names[[names(mae)[i]]] <- names_not_all_zeros
mae = mae[row_names, , ]
}
u <- max(assay(mae[["cd45"]]))
x_mibi <- assay(mae[["mibi"]])
sum(is.na(x_mib''))
sum(is.na(x_mibi))
y_mibi <- apply(x_mibi, 1, function(x){
xmin <- min(x)
xrange <- max(x) - min(x)
y <- (x-xmin)/xrange*u
return(y)
})
y_mibi <- t(y_mibi)
sum(is.na(y_mibi))
#y_mibi[is.na(y_mibi)] <- 0
assay(mae[["mibi"]]) <- y_mibi
x1 <- assay(mae[["cd45"]]) %>% t() %>% as.tibble()
x2 <- assay(mae[["mibi"]]) %>% t() %>% as.tibble()
x <-  full_join(x1, x2)
common_markers <- colnames(x1)[colnames(x1) %in% colnames(x2)]
common_markers
rm(x1,x2)
sum(is.na(x))
View(x)
# some features are not recorded in one domain
x[is.na(x)] <- 0
ot <- t(x)
geo_mean <- function(x) {
if(all(x == 0)){
val <- 0
}else{
val <- exp(sum(log(x[x > 0]))/length(x))
}
return(val)
}
geom_mean_row <- apply(ot, 1, FUN = geo_mean)
dj <- estimateSizeFactorsForMatrix(ot, median, geoMeans = geom_mean_row)
ot <- t(t(ot)/dj)
x <- t(ot)
rm(ot)
x <- apply(x , c(1,2), function(y){as.integer(y)})
x <- as.matrix(x)
sum(is.na(x))
# theta[d] ~ dirichlet(alpha), alpha pseudocount for each topic
# beta[k] ~ dirichlet(gamma), gamma pseudocount for each ASV in each topic
stan.data <- list(K = K,
V = ncol(x),
D = nrow(x),
n = x,
alpha = rep(.8, K),
gamma = rep(.5, ncol(x))
)
fileN <- paste0("../Results/proteomics_filtered_K_",K,"_ite_",iter,".RData")
fileN
t1 <- proc.time()
stan.fit <- stan(file = "./lda.stan",
data = stan.data,
iter = iter,
chains = 4,
sample_file = NULL,
diagnostic_file = NULL,
cores = 4,
control = list(adapt_delta = 0.9),
save_dso = TRUE,
algorithm = "NUTS")
proc.time() - t1
save(stan.fit, file = fileN)
# head(rstan::extract(stan.fit)$"lp__")
#
# tail(rstan::extract(stan.fit)$"lp__")
df <- data.frame(lp = rstan::extract(stan.fit)$"lp__", Chain = paste0("Chain ", rep(seq_len(4), each = (iter/2))))
ggplot(data = df) +
geom_histogram(aes(x = lp, col = Chain, fill = Chain))
print(stan.fit)
head(summary(stan.fit, pars = c("theta"), probs = c(0.1, 0.9))$summary)
head(summary(stan.fit, pars = c("beta"), probs = c(0.1, 0.9))$summary)
# plot R hat of theta and beta
hist(summary(stan.fit, pars = c("theta", "beta"), probs = c(0.1, 0.9))$summary[,7])
sampler_params <- get_sampler_params(stan.fit, inc_warmup = FALSE)
colnames(sampler_params[[1]])
mean_accept_stat_by_chain <- sapply(sampler_params, function(x) mean(x[, "accept_stat__"]))
mean_accept_stat_by_chain
max_treedepth_by_chain <- sapply(sampler_params, function(x) max(x[, "treedepth__"]))
max_treedepth_by_chain
samples <- rstan::extract(stan.fit, permuted = TRUE, inc_warmup = FALSE, include = TRUE)# samples is a list
source("../R_BANF/alignmentMatrix.R")
source("../R_BANF/thetaAligned.R")
theta <- samples$theta
aligned <- alignmentMatrix(theta, mae, K, iter = iter, chain = 4)
theta_aligned <- thetaAligned(theta, K, aligned, iter = iter, chain = 4)
dimnames(theta_aligned)[[2]] <- colnames(mae) %>% unlist() %>% as.character()
dimnames(theta_aligned)[[3]] <- c(paste0("Topic_", seq(1,K)))
dim(theta_aligned)
ps
dim(x)
